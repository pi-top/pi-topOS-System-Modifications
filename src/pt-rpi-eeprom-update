#!/bin/bash

if [ "$EUID" -ne 0 ]; then

  echo "Please run as root"
  exit 1

fi

model="$(tr -d '\0' </proc/device-tree/model)"
echo "Model: ${model}"

if [[ "${model}" != *"Raspberry Pi 4"* ]]; then

  echo "Not Raspberry Pi 4 - exiting..."
  exit 0

fi

rpi_eeprom_resp="$(rpi-eeprom-update)"

bootloader_current="$(echo "${rpi_eeprom_resp}" | ag "CURRENT" | head -n1 | awk '{print $NF}' | sed 's/[()]//g')"
bootloader_latest="$(echo "${rpi_eeprom_resp}" | ag "LATEST" | head -n1 | awk '{print $NF}' | sed 's/[()]//g')"

vl805_current="$(echo "${rpi_eeprom_resp}" | ag "CURRENT" | tail -n1 | awk '{print $NF}')"
vl805_latest="$(echo "${rpi_eeprom_resp}" | ag "LATEST" | tail -n1 | awk '{print $NF}')"

FORCE_EEPROM_UPDATE="/usr/lib/rpi-eeprom-update/pt-force-rpi-eeprom-install-and-reboot"
FORCE_EEPROM_COMMAND="env SUDO_ASKPASS=/usr/lib/pt-os-mods/pwdptom.sh sudo -A ${FORCE_EEPROM_UPDATE}"

NOTIFICATION_TITLE_INVALID_EEPROM="Invalid Raspberry Pi EEPROM configuration"
NOTIFICATION_BODY_INVALID_EEPROM="A patch to Raspberry Pi firmware is required for full functionality."
NOTIFICATION_BODY_DOWNGRADE_EEPROM="EEPROM version on Raspberry Pi is not available, so downgrade is required"

NOTIFICATION_TITLE_UPDATE="Raspberry Pi Firmware Update"

waitForDBusToStart() {
  # Dirty hack
  sleep 5
}

notifyUserRebootToUpdate() {
  echo "Sending notification for reboot to apply firmware update..."

  waitForDBusToStart

  DISPLAY=:0 pt-notify-send -p -t 0 \
    "--action=Reboot now:/sbin/reboot" \
    "${NOTIFICATION_TITLE_UPDATE}" \
    "A Raspberry Pi firmware update will be installed the next time you start your device." \
    "Reboot now to enjoy improved device performance and/or new features."
}

notifyUserInvalidLatestEEPROMConfig() {
  echo "Sending notification to user with request to apply patch..."

  waitForDBusToStart

  DISPLAY=:0 pt-notify-send -t 0 \
    "--action=Apply patch and reboot:${FORCE_EEPROM_COMMAND}" \
    "${NOTIFICATION_TITLE_INVALID_EEPROM}" \
    "${NOTIFICATION_BODY_INVALID_EEPROM}"
}

notifyUserInvalidAheadOfLatestEEPROMConfig() {
  echo "Sending notification to user with request to downgrade EEPROM and apply patch..."

  waitForDBusToStart

  DISPLAY=:0 pt-notify-send -t 0 \
    "--action=Apply patch with downgrade and reboot:${FORCE_EEPROM_COMMAND}" \
    "${NOTIFICATION_TITLE_INVALID_EEPROM}" \
    "${NOTIFICATION_BODY_INVALID_EEPROM} ${NOTIFICATION_BODY_DOWNGRADE_EEPROM}"
}

currentEEPROMConfigIsValid() {
  echo "No bootloader updates available - checking for valid EEPROM config"

  if [ -f /etc/default/rpi-eeprom-update ]; then
    # shellcheck disable=SC1091
    . /etc/default/rpi-eeprom-update
  fi

  if [ -x "${EEPROM_CONFIG_HOOK}" ]; then

    echo "Executable config hook found: '${EEPROM_CONFIG_HOOK}'"

    orig_bootloader_config="$(/opt/vc/bin/vcgencmd bootloader_config)"

    mod_bootloader_config="$(echo "${orig_bootloader_config}" | ${EEPROM_CONFIG_HOOK})"

    echo

    if [[ "${mod_bootloader_config}" == "${orig_bootloader_config}" ]]; then

      echo "Raspberry Pi bootloader configuration is correct for current device configuration"

      return 0

    else

      echo "Raspberry Pi bootloader configuration is incorrect for current device configuration"

      echo
      diff --color='always' --suppress-common-lines <(echo "${orig_bootloader_config}") <(echo "${mod_bootloader_config}")
      echo

      return 1

    fi

  else

    echo "No executable config hook found: '${EEPROM_CONFIG_HOOK}'"

  fi

  return 0
}

echo "BOOTLOADER"
echo "CURRENT: ${bootloader_current}"
echo " LATEST: ${bootloader_latest}"
if [[ "${bootloader_current}" -lt "${bootloader_latest}" ]]; then

  echo "Bootloader firmware update available - running 'rpi-eeprom-update -A bootloader'..."
  rpi-eeprom-update -A bootloader

  if currentEEPROMConfigIsValid; then

    notifyUserRebootToUpdate
    exit 0

  else

    echo "Rebooting to apply update..."
    reboot

  fi

elif [[ "${bootloader_current}" -gt "${bootloader_latest}" ]]; then

  echo "Raspberry Pi version is ahead of latest on OS."

  if ! currentEEPROMConfigIsValid; then

    if [[ "$(/usr/bin/pt-host)" != "pi-top [4]" ]]; then

      notifyUserInvalidAheadOfLatestEEPROMConfig

    else

      ${FORCE_EEPROM_COMMAND}

    fi

  fi

  exit 0

else

  if ! currentEEPROMConfigIsValid; then

    if [[ "$(/usr/bin/pt-host)" != "pi-top [4]" ]]; then

      notifyUserInvalidLatestEEPROMConfig

    else

      ${FORCE_EEPROM_COMMAND}

    fi

  fi

  exit 0

fi

echo "No bootloader firmware update available"
echo

echo "VL805"
echo "CURRENT: ${vl805_current}"
echo " LATEST: ${vl805_latest}"
if [[ "$((16#${vl805_current}))" -lt "$((16#${vl805_latest}))" ]]; then

  echo "VL805 firmware update available - running 'rpi-eeprom-update -A vl805'..."
  rpi-eeprom-update -A vl805

  notifyUserRebootToUpdate

  exit 0

else

  echo "No VL805 firmware update available"

fi
