#!/usr/bin/python3

# This script takes in a Raspberry Pi bootloader config,
# and writes out a modified version that is suitable for the
# given device (as determined by pt-device-manager)

# This script is used by /usr/bin/pt-rpi-eeprom-update for checking if
# the configuration is correct when no update is available.

# This script is used by /usr/bin/rpi-eeprom-update to patch the
# configuration during an update.

from subprocess import run
from sys import stdin, stdout

rpi_config = {}
pt4_config = {
    "WAKE_ON_GPIO": "0",
    "POWER_OFF_ON_HALT": "1"
}

# Default to Raspberry Pi configuration
config = rpi_config

# Change configuration based on pi-top host device
device_id_file = "/etc/pi-top/pt-device-manager/device_version"
try:
    with open(device_id_file, "r") as f:
        resp = f.read()

    if resp != "" and "pi_top_4" in resp:
        config = pt4_config
except IOError:
    print("Device ID file not accessible")

# Patch configuration
for line in stdin:
    for field in config:
        if field in line:
            line = field + "=" + config[field] + "\n"
            break

    stdout.write(line)
