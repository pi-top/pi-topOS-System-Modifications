#!/bin/bash -e

is_pi_top_os() {
	if [[ -f "/etc/pt-issue" ]]; then
		return 0
	else
		return 1
	fi
}

get_users() {
	getent passwd | grep -wFf /etc/shells | awk -F':' '{print $1}'
}

get_home_directory_for_user() {
	local user="${1}"
	[[ -z "${user}" ]] && return
	getent passwd | grep -wFf /etc/shells | grep "${user}" | awk -F':' '{print $(NF-1)}'
}

get_alsa_card_number_by_name() {
	card_to_lookup="${1}"
	# Find card number corresponding to headphones; default to -1
	card_number=$(aplay -l | grep bcm2835 | grep "${card_to_lookup}" | grep -o "card\\s[0-9]" | cut -d ' ' -f 2)
	echo "${card_number:--1}"
}

get_default_audio_card_for_device() {
	default_card="Headphones"
	[[ $(pt-host) = "pi-top [3]" ]] && default_card="HDMI"
	echo "${default_card}"
}

apply_audio_fix() {
	# Find default card number for device

	# Ensure 'dtparam=audio=on' is in /boot/config.txt
	raspi-config nonint set_config_var "dtparam=audio" "on" "/boot/config.txt"

	card_number=$(get_alsa_card_number_by_name "$(get_default_audio_card_for_device)")
	# For each user
	for user in $(get_users); do
		home_dir="$(get_home_directory_for_user "${user}")"
		asoundrc_file="${home_dir}/.asoundrc"
		# Back up existing asound configuration
		[[ -f "${asoundrc_file}" ]] && mv "${asoundrc_file}" "${asoundrc_file}.bak"

		# Set audio card to headphones
		env SUDO_USER="${user}" raspi-config nonint do_audio "${card_number}"

		# Fix file permissions
		chown "${user}:${user}" "${asoundrc_file}"
	done

	# Notify user using display that a restart is required
	pt-notify-send \
		--expire-time=0 \
		--icon=dialog-warning \
		"Audio configuration updated" \
		"Please restart to apply changes"
}

main() {
	# Run fix only if breadcrumb doesn't exist
	BREADCRUMB_FILE="/etc/pi-top/.defaultAudioSet"
	if [[ ! -f "${BREADCRUMB_FILE}" ]]; then
		apply_audio_fix
		touch "${BREADCRUMB_FILE}"
	fi

	# Disable and mask service to avoid running again
	systemctl disable pt-default-audio-selection
	systemctl mask pt-default-audio-selection
}

if is_pi_top_os; then
	main
fi
